#!/bin/sh

# Script for testing the TextConferencingLab on ECE361
# The server should be running on a different terminal before running this script
# The client executable should be in the same folder as the script
# Usage:
# >>> ./testclient user1 password1 user2 password2 server_addr server_port
#
# Starts 2 clients and send a sequence of commands to each of them
# The commands sent to client i are printed under a line "==== client i in ===="
# The outputs of client i are printed under a line "==== client i out ===="
# ./testclient Bob Jim Shayshu password Hamid ece361 128.100.13.246 1789

mkfifo c1_in c2_in c1_d c2_d

sleep 1000 > c1_in &
sleep 1000 > c2_in &

sleep 1000 > c1_d &
sleep 1000 > c2_d &

sed -u 'i\==== client 1 in ====' c1_d &
sed -u 'i\==== client 2 in ====' c2_d &

stdbuf -o0 ./client < c1_in | sed -u 'i\==== client 1 out ====' &
stdbuf -o0 ./client < c2_in | sed -u 'i\==== client 2 out ====' &

sleep 1
# Testing login with incorrect password on client 1. Should fail
echo "/login $1 not_the_password $5 $6" | tee c1_d > c1_in
sleep 1
# Testing login with correct password on client 1. Should succeed
echo "/login $1 $2 $5 $6" | tee c1_d > c1_in
sleep 1
# Testing create_session on client 1. Should succeed and create and join a
# session called test_session
echo "/createsession test_session" | tee c1_d > c1_in
sleep 1
# Testing the list command on client 1. Should list all connected clients and
# available sessions, in this case, user1 and test_session
echo "/list" | tee c1_d > c1_in

sleep 1
# Testing login on client 2 with a user that is already logged in. Should fail
echo "/login $1 $2 $5 $6" | tee c2_d > c2_in
sleep 1
# Testing login with correct password on client 2. Should succeed
echo "/login $3 $4 $5 $6" | tee c2_d > c2_in
sleep 1
# Testing the list command on client 2. Should list all connected clients and
# available sessions, in this case, user1, user2 and test_session
echo "/list" | tee c2_d > c2_in
sleep 1
# Testing the joinsession command on client 2. Should succeed. After this point
# both users should be in the same session and able to exchange messages
echo "/joinsession test_session" | tee c2_d > c2_in
sleep 1
# Testing message exchange between clients. Client 1 should output the message
# being sent by client 2
echo "hello, my name is $3" | tee c2_d > c2_in

sleep 1
# Testing message exchange between clients. Client 2 should output the messages
# being sent by client 1
echo "hello $3, my name is $1" | tee c1_d > c1_in
sleep 1
echo "have you been able to successfully complete lab 4?" | tee c1_d > c1_in
sleep 1
# Testing the list command on client 1. Should list all connected clients and
# available sessions, in this case, user1, user2 and test_session
echo "/list" | tee c1_d > c1_in


sleep 1
# Testing message exchange between clients. Client 1 should output the messages
# being sent by client 2
echo "I have completed it!" | tee c2_d > c2_in
sleep 1
echo "Whether I was successful depends on these tests we are running now..." | tee c2_d > c2_in
sleep 1
# Testing logout on client 2. This should succeed
echo "/logout" | tee c2_d > c2_in

sleep 1
# Testing the list command on client 1. Should list all connected clients and
# available sessions, in this case, user1 and test_session
echo "/list" | tee c1_d > c1_in
sleep 1
# Testing message exchange between clients. Client 2 should not output 
# anything since it has logged out
echo "Oh no, my cursed question made $3 run away" | tee c1_d > c1_in
sleep 1
# Testing leavesession on client 1. This should succeed, user1 should leave
# test_session and since the session is now empty it should be deleted
echo "/leavesession" | tee c1_d > c1_in
# Testing the list command on client 1. Should list all connected clients and
# available sessions, in this case, just user1
echo "/list" | tee c1_d > c1_in

sleep 1
# Testing login with correct password on client 2. Should succeed
echo "/login $3 $4 $5 $6" | tee c2_d > c2_in
sleep 1
# Testing message exchange between clients. Since client 2 is not on any
# session this should fail
echo "Hi, I am back!" | tee c2_d > c2_in
sleep 1
# Testing joinsession on client 2. Since this session does not exist anymore
# this should fail.
echo "/joinsession test_session" | tee c2_d > c2_in
sleep 1
# Testing the list command on client 1. Should list all connected clients and
# available sessions, in this case, user1 and user2
echo "/list" | tee c2_d > c2_in
sleep 1
# Testing createsession of client 2. This should succeed
echo "/createsession test_session" | tee c2_d > c2_in
sleep 1
# Testing quit on client 2. This should terminate the client program. 
echo "/quit" | tee c2_d > c2_in

sleep 1
# Testing joinsession on client 2. This session should have been deleted when
# user2 used quit. This command should fail.
echo "/joinsession test_session" | tee c1_d > c1_in
sleep 1
# Testing quit on client 2. This should terminate the client program. 
echo "/quit" | tee c1_d > c1_in


sleep 1

#kill alll the processes we started and delete all the pipes
kill $(jobs -p)

rm c1_in  c2_in c1_d c2_d
